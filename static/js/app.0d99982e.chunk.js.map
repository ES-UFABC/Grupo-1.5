{"version":3,"sources":["assets/images/logoMaior.png","assets/images/logoBranco.png","services/userService.js","context/userAuth.js","styles/colors.jsx","styles/styleLoggedLandPage.jsx","services/advertisementService.js","components/anuncioCardComponent.jsx","components/landPageButton.jsx","features/logged-land-page/loggedLandPageComponent.jsx","styles/styleListPage.jsx","services/categories.js","features/donation-list-page/donationListPageComponent.jsx","features/sell-list-page/sellListPageComponent.jsx","styles/styleCreateAdvertisement.jsx","styles/styleUserRegistrationPage.jsx","components/inputFieldRegistration.jsx","styles/styleLandPage.jsx","components/menuButtonComponent.jsx","features/create-advertisement/create-advertisement.jsx","services/notificationService.js","styles/styleAdvertisementPage.jsx","features/advertisement-page/advertisementPage.jsx","features/user-profile-page/userProfilePageComponent.jsx","routes/appRoute.js","features/land-page/landPageComponent.jsx","styles/styleLoginPage.jsx","components/inputFieldLogin.jsx","features/login-page/loginComponent.jsx","features/user-registration-page/userRegistrationPageComponent.jsx","styles/styleUserRegSuccessPage.jsx","features/user-registration-page/userRegSuccessPageComponent.jsx","routes/authRoute.js","routes/routes.js","App.js"],"names":["module","exports","login","email","senha","a","async","loginObj","password","console","log","axios","post","then","responseAPI","response","data","defaults","headers","common","token","catch","error","register","user","deleteUser","delete","updateUser","put","_id","res","AuthContext","React","createContext","AuthProvider","children","useState","setUser","signed","setSigned","Provider","value","signIn","status","logout","signUp","useAuth","useContext","colors","primary","secundary","tertiary","white","black","grayLight","grayMedium","styles","StyleSheet","create","appBar","backgroundColor","color","justifyContent","textButton","fontFamily","fontSize","spacerStyle","marginBottom","tituloTag","paddingLeft","getAll","advertisements","get","result","createAdvertisement","advertisement","responseApi","deleteAdvertisement","id","updateAdvertisement","getAdFromUser","adsFromUser","map","ad","userId","push","getAdvertisement","err","uploadImage","image","imgBody","FormData","append","file","AnuncioCardComponent","props","anuncio","navigation","Card","style","marginStart","marginEnd","marginTop","Title","title","Content","price","Paragraph","Actions","Button","onPress","LandPageButtonComponent","TouchableOpacity","height","alignItems","cor","Text","titulo","LoggedLandPageComponent","originalAdList","setOriginalAdList","advertisementList","setAdList","loaded","setLoaded","optionsVisible","setOptions","isLoadinAd","setIsLoadingAd","useEffect","loadAds","ads","reverse","arrayAd","slice","finally","closeOption","useFonts","Nunito_400Regular","Nunito_700Bold","Nunito_800ExtraBold","View","Appbar","Header","Action","icon","Menu","visible","onDismiss","anchor","Item","ScrollView","ActivityIndicator","position","top","left","right","bottom","animating","index","searchBar","width","getAllCategories","categories","DonationListPageComponent","categoriesList","showMoreButton","setShowMoreButton","itensShowed","setItensShowed","searchBarValue","setSearchBarValue","isSnackBarVisible","setIsSnackBarVisible","snackBarText","setSnackBarText","setFilterQuantity","categoriesFiltered","setCategoriesFiltered","label","setCategories","filterAdsQuantity","length","category","categoryObj","description","setTimeout","pop","adsQuantity","buttonState","newAdList","item","onDismissSnackBar","Searchbar","placeholder","onChangeText","text","toLowerCase","includes","filterAdvertisement","Snackbar","theme","accent","action","isMulti","name","options","className","onChange","clearFilterByCategory","categoryIds","adCategorie","filterCategorie","classNamePrefix","marginLeft","FAB","SellListPageComponent","actionMeta","container","flex","textContainer","flexWrap","marginHorizontal","alignSelf","flexDirection","fontWeight","textTag","inputView","inputText","textAlign","inputTextContainer","InputFieldRegistration","TextInput","outlineColor","activeOutlineColor","mode","Icon","placeholderTextColor","tituloLogo","loginBtn","borderRadius","conditions","textDecorationLine","textDecorationColor","MenuButtonComponent","CreateAdvertisementComponent","selectedCategoriesList","setTitle","setDescription","setPrice","bookState","setBookState","bookCondition","setBookCondition","list","selectedList","isDonation","setDonation","Nunito_300Light","initial","textColor","selectedColor","buttonColor","updateTitle","updateDescription","editable","updatePrice","RadioButton","uncheckedColor","onSelection","updateSelectedCategories","arrayList","selectedArrayList","errorText","multiEnable","textInputMode","dialogTitleStyle","activeUnderlineColor","searchStyle","iconColor","borderColor","textInputBackgroundColor","registerObj","parseInt","handleRegister","notifyInterest","notification","getNotifications","readNotification","paddingBottom","alignContent","appBarItem","appBarTitleItem","textoTag","bookConditionTag","textTransform","itemTag","buttonUpdate","margin","buttonCancel","textButtonUpdate","textInput","padding","resizeMode","paddingTop","AdvertisementPageComponent","route","params","setOptionsVisible","deleteVisible","setDeleteVisible","update","setUpdate","setImageUrl","isOwner","setOwner","uploading","setUploading","barVisible","setBarVisible","setSnackText","closeDelete","imageUrl","Nunito_200ExtraLight","Nunito_200ExtraLight_Italic","refreshAd","upload","addImage","ImagePicker","granted","alert","DocumentPicker","pickerResult","cancelled","undefined","Image","source","uri","keyboardType","labelStyle","newNotification","advertisementId","advertisementTitle","interestedId","nameInterested","first_name","numberInterested","cellphone","ownerAdId","dateNotified","Date","now","read","sendNotifyInterest","anuncioObj","handleUpdate","Portal","Dialog","UserProfileComponent","expanded","setExpanded","expandedNotifications","setExpandedNotifications","setLoadAds","isLoadedNotifications","setLoadNotifications","setAdvertisementList","setCellphone","notifications","setNotifications","unreadNotifications","setUnreadNotifications","loadNotifications","getUnreadNotificationsCount","unreadCount","notf","styleUser","primeiraParte","drawImg","userData","last_name","ra","userUpdt","oldAdSection","titleStyle","descriptionStyle","Badge","size","nots","Stack","createStackNavigator","AppRoutes","Navigator","Screen","component","headerShown","LandPageComponent","logo","loginTxt","borderWidth","paddingRight","forgot_btn","forgot_txt","InputFieldLogin","underlineColor","LoginComponent","isLogin","setLogin","setEmail","setSenha","StatusBar","updateEmail","secureTextEntry","updateSenha","message","UserRegistrationComponent","isRegistering","setRegistering","userName","setUserName","userLastName","setUserLastName","userEmail","setUserEmail","userRA","setUserRA","userPassword","setUserPassword","userPhone","setUserPhone","updateUserName","lastName","updateUserLastName","updateUserEmail","updateUserRA","phone","updateUserPhone","updateUserPassword","UserRegSuccessComponent","AuthRoutes","Routes","App","NavigationContainer","backgroundInput"],"mappings":"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","file":"static/js/app.0d99982e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoMaior.20242980.png\";","module.exports = __webpack_public_path__ + \"static/media/logoBranco.f32297c5.png\";","import axios from 'axios';\r\n\r\nconst login = async (email, senha)  => {\r\n    let response;\r\n    let loginObj = {email:email, password:senha};\r\n    console.log(process.env.BASE_URL);\r\n    await axios.post(process.env.BASE_URL + '/login', loginObj)\r\n    .then(responseAPI => {\r\n        response = responseAPI.data;\r\n        axios.defaults.headers.common['authorization'] = response.data.token;\r\n    })\r\n    .catch(error=>{\r\n            response = error.response.data;\r\n        });\r\n    return response\r\n}\r\n\r\nconst register =  async (user) =>{\r\n    let response;\r\n    \r\n    await axios.post(process.env.BASE_URL + '/user',user)\r\n                .then((responseAPI) => response = responseAPI.data)\r\n                .catch((error) => response =  error.response.data);\r\n    return response;\r\n}\r\n\r\nconst deleteUser = async(user) =>{\r\n    let response;\r\n\r\n    await axios.delete(process.env.BASE_URL + '/user',user)\r\n                .then((responseAPI) => response = responseAPI.data)\r\n                .catch((error) => response = error.response.data);\r\n}\r\n\r\nconst updateUser = async(user) =>{\r\n    let response;\r\n    await axios.put(process.env.BASE_URL + '/user/' + user._id, user)\r\n                .then((res)=>{\r\n                    response = res;\r\n                })\r\n                .catch(error => {\r\n                    response = error;\r\n                });\r\n    return response;\r\n}\r\n\r\nexport  {login, register, deleteUser, updateUser};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {login, register} from '../services/userService';\r\n\r\nconst AuthContext = React.createContext({});\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user,setUser] = useState({});\r\n  const [signed, setSigned] = useState(false);\r\n\r\n  async function signIn(email, senha) {\r\n    if(!signed){\r\n      let response = await login(email, senha)\r\n      if(response.status === true){\r\n        setSigned(true);\r\n        setUser(response.data.user);\r\n      }\r\n      return response;\r\n    }\r\n  }\r\n  \r\n  async function logout(){\r\n    if(signed){\r\n      setSigned(false);\r\n    }\r\n  }\r\n\r\n  async function signUp(user){\r\n    let response = await register(user)\r\n    return response;\r\n  }\r\n  \r\n  return (\r\n    <AuthContext.Provider value={{ signed: signed, user: user, signIn, logout, signUp }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useAuth(){\r\n  const context = useContext(AuthContext);\r\n  return context;\r\n}\r\n\r\nexport  {AuthProvider, useAuth}; \r\n","const colors = {\r\n    primary:\"#657fac\", //logo\r\n    secundary:'#8da4cd', //fundo\r\n    tertiary:\"#839bc4\", //input\r\n    white:\"#ffffff\",\r\n    black: \"#000000\",\r\n    grayLight: \"#f0f0f0\",\r\n    grayMedium: \"#858585\",\r\n    register:\"#e87a58\"\r\n}\r\n\r\nexport default colors;","import { StyleSheet } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nconst styles = StyleSheet.create({\r\n    appBar:{\r\n        backgroundColor:colors.primary,\r\n        color:colors.primary,\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    textButton:{\r\n        color:colors.white,\r\n        fontFamily:'Nunito_700Bold',\r\n        fontSize:18\r\n    },\r\n    spacerStyle: {\r\n        marginBottom: 15\r\n    },\r\n    tituloTag:{\r\n        fontSize:24,\r\n        fontFamily:' Nunito_700Bold',\r\n        paddingLeft: \"2%\",\r\n    },\r\n})\r\n\r\nexport default styles;","import axios from \"axios\";\r\n\r\nconst getAll = async () =>{\r\n    let advertisements = [{}];\r\n    await axios.get(process.env.BASE_URL + '/advertisement')\r\n        .then(\r\n            (response)=>{\r\n                advertisements = response.data.data.result;\r\n                \r\n            }\r\n        )\r\n        .catch(\r\n            (error)=>{\r\n                advertisements = error.response.data\r\n            }\r\n        )\r\n    return advertisements;\r\n}\r\n\r\nconst createAdvertisement = async (advertisement) =>{\r\n    let response = [{}];\r\n    await axios.post(process.env.BASE_URL + '/advertisement', advertisement)\r\n        .then(\r\n            (responseApi)=>{\r\n                response = responseApi.data;\r\n            }   \r\n        )\r\n        .catch(\r\n            (error)=>{\r\n                response = error.response.data;\r\n            }\r\n        )\r\n    return response\r\n}\r\n\r\nconst deleteAdvertisement = async (advertisement) =>{\r\n    let response = {};\r\n    let id = advertisement._id\r\n    await axios.delete(process.env.BASE_URL + '/advertisement/' + id)\r\n        .then(\r\n            (responseApi)=>{\r\n                response = responseApi;\r\n            }\r\n        )\r\n        .catch(\r\n            (error)=>{\r\n                response = error.response.data;\r\n            }\r\n        )\r\n    return response;\r\n}\r\n\r\nconst updateAdvertisement = async (advertisement)=>{\r\n    let response = {};\r\n    let id = advertisement._id;\r\n    await axios.put(process.env.BASE_URL + '/advertisement/' + id, advertisement)\r\n        .then(\r\n            (responseApi)=>{\r\n                response=responseApi;\r\n            }\r\n        )\r\n        .catch(\r\n            (error)=>{\r\n                response = error.response.data;\r\n            }\r\n        )\r\n    return response;\r\n}\r\n\r\nconst getAdFromUser = async(id) => {\r\n    let adsFromUser = [];\r\n    await getAll().then(\r\n        (advertisements)=>{\r\n            advertisements.map(\r\n                (ad)=>{\r\n                    if(ad.userId === id){\r\n                        adsFromUser.push(ad);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    )\r\n    return adsFromUser;\r\n}\r\nconst getAdvertisement = async(id) =>{\r\n    let response;\r\n    await axios.get(process.env.BASE_URL+'/advertisement/'+id).then(\r\n        (res) =>{\r\n            response=res;\r\n        }\r\n    ).catch(err => console.log(err));\r\n    return response.data.data.result[0];\r\n}\r\n\r\nconst uploadImage = async(id, image)=>{\r\n    let response;\r\n    const imgBody = new FormData();\r\n    imgBody.append(\"image\", image.file);\r\n    await axios.post(process.env.BASE_URL + '/advertisement/image?id='+id,imgBody,{\r\n    }).then(res=>{\r\n        response =res;\r\n    }).catch(err=>{\r\n        console.log(err.response);\r\n    });\r\n    return response;\r\n}\r\n\r\n\r\n\r\nexport {getAll, deleteAdvertisement, updateAdvertisement, createAdvertisement, getAdFromUser, uploadImage, getAdvertisement};\r\n","import React from \"react\";\r\nimport { Card,  Paragraph, Button } from \"react-native-paper\";\r\nimport colors from \"../styles/colors\";\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport { \r\n    \r\n    Nunito_400Regular,\r\n    Nunito_700Bold,\r\n    Nunito_800ExtraBold\r\n} from '@expo-google-fonts/nunito';\r\n\r\nconst AnuncioCardComponent = (props) =>{\r\n    let anuncio = props.advertisement;\r\n    let navigation = props.navigation;\r\n    const showAdPage = () =>{\r\n        navigation.push('AdvertisementPage', anuncio);\r\n    }\r\n    return(\r\n        <Card style={{backgroundColor:colors.white, marginStart: '2%', marginEnd: '2%', marginTop: '2%'}}>\r\n            <Card.Title title={anuncio.title} style={{ color: colors.white, backgroundColor: colors.secundary, marginBottom: '2%'}}/>\r\n            <Card.Content>\r\n                {anuncio.price !== 0 ? <Paragraph style={{ color:colors.black}}>R$ {anuncio.price} </Paragraph> : \r\n                <Paragraph style={{ color:colors.black}}>Doação </Paragraph>\r\n                }\r\n            </Card.Content>\r\n            <Card.Actions>\r\n                <Button  onPress={()=>showAdPage()}>Ver detalhes</Button>\r\n            </Card.Actions>\r\n        </Card> \r\n    );\r\n}\r\n\r\nexport default AnuncioCardComponent;","import styles from \"../styles/styleLoggedLandPage\";\r\nimport { TouchableOpacity,Text } from \"react-native\";\r\nimport colors from \"../styles/colors\";\r\n\r\nconst LandPageButtonComponent = (props) =>{\r\n    return(\r\n        <TouchableOpacity \r\n            style={{ \r\n                height: 50,\r\n                alignItems: \"center\",\r\n                marginStart: '2%',\r\n                marginEnd: '2%',\r\n                marginBottom: '2%',\r\n                justifyContent:'center', \r\n                backgroundColor:props.cor\r\n            }} \r\n            onPress={props.onPress}\r\n        >\r\n            <Text style={styles.textButton}>{props.titulo}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nexport default LandPageButtonComponent;","import React, { useEffect, useState, Component } from \"react\";\r\nimport { View, Text,ScrollView, TouchableOpacity } from \"react-native\";\r\nimport { Appbar,  Card,  Paragraph, Button, FAB,  Menu, ActivityIndicator } from \"react-native-paper\";\r\nimport colors from \"../../styles/colors\";\r\nimport styles from \"../../styles/styleLoggedLandPage\";\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport { \r\n    Nunito_400Regular,\r\n    Nunito_700Bold,\r\n    Nunito_800ExtraBold\r\n  } from '@expo-google-fonts/nunito';\r\nimport { useAuth } from \"../../context/userAuth\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport { getAll } from \"../../services/advertisementService\";\r\nimport AnuncioCardComponent from \"../../components/anuncioCardComponent\";\r\nimport LandPageButtonComponent from \"../../components/landPageButton\";\r\n\r\nconst LoggedLandPageComponent = ({navigation}) => {\r\n    \r\n    const { logout } = useAuth();\r\n    const [originalAdList, setOriginalAdList] = useState([]);\r\n    const [advertisementList, setAdList] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [optionsVisible, setOptions] = useState(false);\r\n    const [isLoadinAd, setIsLoadingAd] = useState(false);\r\n\r\n    useEffect(()=>{ \r\n        if(!loaded){\r\n            loadAds();\r\n        } \r\n         \r\n    },[originalAdList]);\r\n    const handleLogout = async ()=> { await logout();}\r\n    const viewProfile = () => {navigation.push('UserProfile')}\r\n    const loadAds = async() =>{\r\n        setIsLoadingAd(true);\r\n        await getAll().then(\r\n            (ads)=>{\r\n                setOriginalAdList(ads.reverse());\r\n                let arrayAd = [];\r\n                ads.slice(0, 5).map (\r\n                    (ad)=>{\r\n                        arrayAd.push(ad);\r\n                    }\r\n                )\r\n                setAdList(arrayAd); \r\n            }\r\n        ).finally(()=>{setLoaded(true);setIsLoadingAd(false);\r\n        })\r\n    \r\n    }\r\n\r\n    const openOption = () =>{\r\n        setOptions(true);\r\n    }\r\n    const closeOption = () =>{\r\n        setOptions(false);\r\n    }\r\n\r\n    const showAnnouncement = () => {\r\n        return (\r\n            <View>\r\n                <Text style={ styles.tituloTag }> Anúncios criados recentemente </Text>\r\n                <View style={ styles.spacerStyle }></View>\r\n                {advertisementList.map((advertisement, index)=>{\r\n                return(\r\n                    <AnuncioCardComponent key={index} advertisement={advertisement} navigation={navigation}/>\r\n                )\r\n                })}\r\n            </View>\r\n        )\r\n    }\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_400Regular,\r\n        Nunito_700Bold,\r\n        Nunito_800ExtraBold\r\n      });\r\n\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n\r\n    return(\r\n        <View>\r\n            <Appbar.Header style={styles.appBar}>\r\n                <Appbar.Action icon='refresh' onPress={() => setLoaded(false)}/>\r\n                <Menu visible={optionsVisible} onDismiss={closeOption} anchor={<Appbar.Action icon='account'  onPress={()=>openOption()}/>}>\r\n                    <Menu.Item onPress={()=>{handleLogout(); closeOption()}} title=\"Deslogar\"/>\r\n                    <Menu.Item onPress={()=>{viewProfile(); closeOption()}} title=\"Ver Perfil\"/>\r\n                    \r\n                </Menu>\r\n            </Appbar.Header>\r\n\r\n            <View style={styles.spacerStyle}></View>\r\n            <ScrollView>\r\n                <Text style={ styles.tituloTag }> O que você deseja fazer? </Text>\r\n                <View style={ styles.spacerStyle }></View>\r\n                <LandPageButtonComponent\r\n                        titulo = \"Ver livros à venda\"\r\n                        cor = { colors.register }\r\n                        onPress = { () => navigation.push(\"SellListPage\") }\r\n                />\r\n                <View style={ {marginBottom:8} }></View>\r\n                <LandPageButtonComponent\r\n                        titulo = \"Ver livros para doação\"\r\n                        cor = { colors.primary }\r\n                        onPress = { () => navigation.push(\"DonationListPage\") }\r\n                />\r\n                <View style={ styles.spacerStyle }></View>\r\n                {isLoadinAd ? <ActivityIndicator style={{\r\n                                                            position: \"absolute\",\r\n                                                            top: 0,\r\n                                                            left: 0,\r\n                                                            right: 0,\r\n                                                            bottom: 0,\r\n                                                            justifyContent: \"center\",\r\n                                                            alignItems: \"center\",}\r\n                                                        } \r\n                                                animating={true} color={colors.primary} />:\r\n                        showAnnouncement()\r\n                }\r\n            </ScrollView>\r\n            <View style={ styles.spacerStyle }></View>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LoggedLandPageComponent;","import { StyleSheet } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nconst styles = StyleSheet.create({\r\n    appBar:{\r\n        backgroundColor:colors.primary,\r\n        color:colors.primary,\r\n        justifyContent: \"space-around\"\r\n    },\r\n    searchBar:{\r\n        backgroundColor:colors.secundary,\r\n        width:'65%'\r\n    },\r\n    textButton:{\r\n        color:colors.white,\r\n        fontFamily:'Nunito_700Bold',\r\n        fontSize:18\r\n    },\r\n    spacerStyle: {\r\n        marginBottom: 15\r\n    }\r\n})\r\n\r\nexport default styles;","import axios from \"axios\";\r\n\r\nconst getAllCategories = async () => {\r\n    let categories = [{}];\r\n    await axios.get(process.env.BASE_URL + '/category')\r\n        .then(\r\n            (response) => {\r\n                categories = response.data;\r\n            }\r\n        )\r\n        .catch(\r\n            (error) => {\r\n                categories = error.response.data\r\n            }\r\n        )\r\n    return categories\r\n}\r\n\r\nexport {getAllCategories};","import React, { useEffect, useState, Component } from \"react\";\r\nimport { View, Text,ScrollView, TouchableOpacity } from \"react-native\";\r\nimport { Appbar,  Searchbar, Snackbar,  Paragraph, Button, FAB,  Menu, ActivityIndicator } from \"react-native-paper\";\r\nimport Select from \"react-select\";\r\nimport colors from \"../../styles/colors\";\r\nimport styles from \"../../styles/styleListPage\";\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport { \r\n    \r\n    Nunito_400Regular,\r\n    Nunito_700Bold,\r\n    Nunito_800ExtraBold\r\n  } from '@expo-google-fonts/nunito';\r\nimport { useAuth } from \"../../context/userAuth\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport { getAll } from \"../../services/advertisementService\";\r\nimport { getAllCategories } from \"../../services/categories\";\r\nimport AnuncioCardComponent from \"../../components/anuncioCardComponent\";\r\n\r\nfunction DonationListPageComponent({ navigation }) {\r\n\r\n    const { logout } = useAuth();\r\n    const categoriesList = [];\r\n    const categoriesSelectedList = [];\r\n    const [originalAdList, setOriginalAdList] = useState([]);\r\n    const [advertisementList, setAdList] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [optionsVisible, setOptions] = useState(false);\r\n    const [showMoreButton, setShowMoreButton] = useState(false);\r\n    const [itensShowed, setItensShowed] = useState(10);\r\n    const [searchBarValue, setSearchBarValue] = useState('');\r\n    const [isSnackBarVisible, setIsSnackBarVisible] = useState(false);\r\n    const [snackBarText, setSnackBarText] = useState('');\r\n    const [filterQuantity, setFilterQuantity] = useState(0);\r\n    const [categoriesFiltered, setCategoriesFiltered] = useState(0);\r\n    const [categories, setCategories] = useState([{\r\n        label: '',\r\n        value: '',\r\n    }]);\r\n\r\n    const handleLogout = async () => { await logout(); };\r\n    const viewProfile = () => { navigation.push('UserProfile'); };\r\n    const loadAds = async () => {\r\n        await getAll().then(\r\n            (ads) => {\r\n                let arrayAd = [];\r\n                ads.map((ad) => {\r\n                    if (ad.price === 0) {\r\n                        arrayAd.push(ad);\r\n                    }\r\n                });\r\n                setOriginalAdList(arrayAd.reverse());\r\n                setAdList(originalAdList);\r\n                filterAdsQuantity(arrayAd.length);\r\n                setLoaded(true);\r\n            }\r\n        )\r\n    };\r\n\r\n    const handleCategories = async () => {\r\n        await getAllCategories().then(\r\n            (response)=>{\r\n                if (response.status === true) {\r\n                    response.data.result.map(\r\n                        (category, index) => {\r\n                            let categoryObj = { value: category._id, label: category.description };\r\n                            categoriesList.push(categoryObj); \r\n                        }\r\n                    )\r\n                    setCategories(categoriesList);\r\n                }\r\n                else {\r\n                    setIsSnackBarVisible(true);\r\n                    setSnackBarText(\"Ops, não conseguimos carregar as categorias dos livros.\");\r\n                    setTimeout(() => navigation.pop(), 10000);\r\n                }\r\n                setLoaded(true);\r\n            }\r\n        )\r\n    }\r\n\r\n    if(!loaded){\r\n        loadAds();\r\n        handleCategories();\r\n    }\r\n\r\n    const openOption = () => {\r\n        setOptions(true);\r\n    };\r\n    const closeOption = () => {\r\n        setOptions(false);\r\n    };\r\n\r\n    const filterAdsQuantity = (adsQuantity, buttonState) => {\r\n        adsQuantity > itensShowed ? setShowMoreButton(true) : setShowMoreButton(false);\r\n        if (showMoreButton) {\r\n            let newAdList = [];\r\n            originalAdList.slice(0, itensShowed).map(\r\n                (item) => {\r\n                    newAdList.push(item);\r\n                }\r\n            );\r\n            setAdList(newAdList);\r\n            setItensShowed(itensShowed + 10);\r\n        } else {\r\n            setAdList(originalAdList);\r\n        }\r\n    };\r\n\r\n    const filterAdvertisement = (text) => {\r\n        let newAdList = [];\r\n        originalAdList.slice(0, itensShowed - 10).map(\r\n            (ad) => {\r\n                if (ad.title.toLowerCase().includes(text.toLowerCase())) {\r\n                    newAdList.push(ad);\r\n                }\r\n            }\r\n        );\r\n        // setSearchBarValue(text);\r\n        setAdList(newAdList);\r\n        setSearchBarValue(text);\r\n    };\r\n\r\n    const clearFilterByCategory = () => {\r\n        let newAdList = [];\r\n        originalAdList.slice(0, itensShowed - 10).map(\r\n            (ad) => {\r\n                newAdList.push(ad);\r\n            }\r\n        );\r\n        originalAdList.length > (itensShowed-10) ? setShowMoreButton(true) : setShowMoreButton(false);\r\n        setAdList(newAdList);\r\n    }\r\n\r\n    const filterByCategory = (categories) => {\r\n        clearFilterByCategory();\r\n        let newAdList = [];\r\n        if (categories.length !== 0) {\r\n            if (categories.length === 1) {\r\n                originalAdList.slice(0, itensShowed - 10).map(\r\n                    (ad) => {\r\n                        ad.categoryIds.map(\r\n                            (adCategorie) => {\r\n                                if (adCategorie === categories[0].value) {\r\n                                    newAdList.push(ad);\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                originalAdList.slice(0, itensShowed - 10).map(\r\n\r\n                    (ad) => {\r\n                        setFilterQuantity(ad.categoryIds.length);\r\n                        setCategoriesFiltered(0);\r\n                        ad.categoryIds.map(\r\n\r\n                            (adCategorie) => {\r\n                                categories.map(\r\n\r\n                                    (filterCategorie) => {\r\n                                        if (adCategorie == filterCategorie.value) {\r\n                                            if (adCategorie == categories.value) {\r\n                                                setCategoriesFiltered(categoriesFiltered + 1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                );\r\n            }\r\n            setShowMoreButton(false);\r\n            setAdList(newAdList);\r\n        } \r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        setSearchBarValue(\"\");\r\n        filterAdsQuantity(originalAdList.length);\r\n    };\r\n\r\n    const onDismissSnackBar = () => setIsSnackBarVisible(false);\r\n    \r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_400Regular,\r\n        Nunito_700Bold,\r\n        Nunito_800ExtraBold\r\n    });\r\n\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Appbar.Header style={styles.appBar}>\r\n                <Appbar.Action icon=\"arrow-left\" onPress={() => navigation.pop()} />\r\n                <Searchbar placeholder=\"Pesquisar\" value={searchBarValue} onChangeText={(text) => filterAdvertisement(text)} style={styles.searchBar} />\r\n                <Appbar.Action icon='refresh' onPress={() => {setLoaded(false), setItensShowed(10)}} />\r\n                <Menu visible={optionsVisible} onDismiss={closeOption} anchor={<Appbar.Action icon='account' onPress={() => openOption()} />}>\r\n                    <Menu.Item onPress={() => { handleLogout(); closeOption(); } } title=\"Deslogar\" />\r\n                    <Menu.Item onPress={() => { viewProfile(); closeOption(); } } title=\"Ver Perfil\" />\r\n\r\n                </Menu>\r\n            </Appbar.Header>\r\n\r\n            <Snackbar\r\n                visible = {isSnackBarVisible}\r\n                onDismiss = {onDismissSnackBar}\r\n                theme = {{colors: {accent: colors.register}}}\r\n                action = {{\r\n                    icon: \"close\",\r\n                    onPress: () => onDismissSnackBar\r\n                }}>\r\n                <Text>{ snackBarText }</Text>\r\n            </Snackbar>\r\n            <Select\r\n                isMulti\r\n                name=\"colors\"\r\n                options={categories}\r\n                placeholder=\"Filtrar por categoria\"\r\n                styles={{ width: 500 }}\r\n                className=\"basic-multi-select\"\r\n                onChange= {filterByCategory}\r\n                classNamePrefix=\"select\" \r\n            />\r\n            <ScrollView>\r\n                {\r\n                    advertisementList.map((advertisement, index) => {\r\n                        return (\r\n                            <AnuncioCardComponent key={index} advertisement={advertisement} navigation={navigation} />\r\n                        );\r\n                    })}\r\n            </ScrollView>\r\n\r\n            {showMoreButton ?\r\n                <TouchableOpacity\r\n                    style={{\r\n                        width: \"40%\",\r\n                        height: 50,\r\n                        alignItems: \"center\",\r\n                        marginTop: 20,\r\n                        marginLeft: '2%',\r\n                        justifyContent: 'center',\r\n                        backgroundColor: colors.primary\r\n                    }}\r\n                    onPress={() => handleLoadMore()}\r\n                >\r\n                    <Text style={styles.textButton}>Carregar mais</Text>\r\n                </TouchableOpacity>\r\n                :\r\n                null}\r\n\r\n            <View>\r\n                <FAB\r\n                    style={{ position: 'fixed', right: \"2%\", bottom: 15, backgroundColor: colors.primary }}\r\n                    icon=\"plus\"\r\n                    onPress={() => navigation.push('CreateAdvertisement')} />\r\n            </View>\r\n\r\n            <View style={ styles.spacerStyle }></View>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DonationListPageComponent;","import React, { useEffect, useState, Component } from \"react\";\r\nimport { View, Text,ScrollView, TouchableOpacity } from \"react-native\";\r\nimport { Appbar,  Searchbar, Snackbar,  Paragraph, Button, FAB,  Menu, ActivityIndicator } from \"react-native-paper\";\r\nimport Select from \"react-select\";\r\nimport colors from \"../../styles/colors\";\r\nimport styles from \"../../styles/styleListPage\";\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport { \r\n    \r\n    Nunito_400Regular,\r\n    Nunito_700Bold,\r\n    Nunito_800ExtraBold\r\n  } from '@expo-google-fonts/nunito';\r\nimport { useAuth } from \"../../context/userAuth\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport { getAll } from \"../../services/advertisementService\";\r\nimport { getAllCategories } from \"../../services/categories\";\r\nimport AnuncioCardComponent from \"../../components/anuncioCardComponent\";\r\n\r\nfunction SellListPageComponent({ navigation }) {\r\n\r\n    const { logout } = useAuth();\r\n    const categoriesList = [];\r\n    const categoriesSelectedList = [];\r\n    const [originalAdList, setOriginalAdList] = useState([]);\r\n    const [advertisementList, setAdList] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [optionsVisible, setOptions] = useState(false);\r\n    const [showMoreButton, setShowMoreButton] = useState(false);\r\n    const [itensShowed, setItensShowed] = useState(10);\r\n    const [searchBarValue, setSearchBarValue] = useState('');\r\n    const [isSnackBarVisible, setIsSnackBarVisible] = useState(false);\r\n    const [snackBarText, setSnackBarText] = useState('');\r\n    const [filterQuantity, setFilterQuantity] = useState(0);\r\n    const [categoriesFiltered, setCategoriesFiltered] = useState(0);\r\n    const [categories, setCategories] = useState([{\r\n        label: '',\r\n        value: '',\r\n    }]);\r\n\r\n    const handleLogout = async () => { await logout(); };\r\n    const viewProfile = () => { navigation.push('UserProfile'); };\r\n    const loadAds = async () => {\r\n        await getAll().then(\r\n            (ads) => {\r\n                let arrayAd = [];\r\n                ads.map((ad) => {\r\n                    if (ad.price > 0) {\r\n                        arrayAd.push(ad);\r\n                    }\r\n                });\r\n                setOriginalAdList(arrayAd.reverse());\r\n                setAdList(originalAdList);\r\n                filterAdsQuantity(arrayAd.length);\r\n                setLoaded(true);\r\n            }\r\n        )\r\n    };\r\n\r\n    const handleCategories = async () => {\r\n        await getAllCategories().then(\r\n            (response)=>{\r\n                if (response.status === true) {\r\n                    response.data.result.map(\r\n                        (category, index) => {\r\n                            let categoryObj = { value: category._id, label: category.description };\r\n                            categoriesList.push(categoryObj); \r\n                        }\r\n                    )\r\n                    setCategories(categoriesList);\r\n                }\r\n                else {\r\n                    setIsSnackBarVisible(true);\r\n                    setSnackBarText(\"Ops, não conseguimos carregar as categorias dos livros.\");\r\n                    setTimeout(() => navigation.pop(), 10000);\r\n                }\r\n                setLoaded(true);\r\n            }\r\n        )\r\n    }\r\n\r\n    if(!loaded){\r\n        loadAds();\r\n        handleCategories();\r\n    }\r\n\r\n    const openOption = () => {\r\n        setOptions(true);\r\n    };\r\n    const closeOption = () => {\r\n        setOptions(false);\r\n    };\r\n\r\n    const filterAdsQuantity = (adsQuantity, buttonState) => {\r\n        adsQuantity > itensShowed ? setShowMoreButton(true) : setShowMoreButton(false);\r\n        if (showMoreButton) {\r\n            let newAdList = [];\r\n            originalAdList.slice(0, itensShowed).map(\r\n                (item) => {\r\n                    newAdList.push(item);\r\n                }\r\n            );\r\n            setAdList(newAdList);\r\n            setItensShowed(itensShowed + 10);\r\n        } else {\r\n            setAdList(originalAdList);\r\n        }\r\n    };\r\n\r\n    const filterAdvertisement = (text) => {\r\n        setSearchBarValue(text);\r\n        let newAdList = [];\r\n        originalAdList.slice(0, itensShowed - 10).map(\r\n            (ad) => {\r\n                if (ad.title.toLowerCase().includes(text.toLowerCase())) {\r\n                    newAdList.push(ad);\r\n                }\r\n            }\r\n        );\r\n        setAdList(newAdList);\r\n    };\r\n\r\n    const clearFilterByCategory = () => {\r\n        let newAdList = [];\r\n        originalAdList.slice(0, itensShowed - 10).map(\r\n            (ad) => {\r\n                newAdList.push(ad);\r\n            }\r\n        );\r\n        originalAdList.length > (itensShowed-10) ? setShowMoreButton(true) : setShowMoreButton(false);\r\n        setAdList(newAdList);\r\n    }\r\n\r\n    const filterByCategory = (categories, actionMeta) => {\r\n        clearFilterByCategory();\r\n        let newAdList = [];\r\n        if (categories.length !== 0) {\r\n            if (categories.length === 1) {\r\n                originalAdList.slice(0, itensShowed - 10).map(\r\n                    (ad) => {\r\n                        ad.categoryIds.map(\r\n                            (adCategorie) => {\r\n                                if (adCategorie === categories[0].value) {\r\n                                    newAdList.push(ad);\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                originalAdList.slice(0, itensShowed - 10).map(\r\n\r\n                    (ad) => {\r\n                        setFilterQuantity(ad.categoryIds.length);\r\n                        setCategoriesFiltered(0);\r\n                        ad.categoryIds.map(\r\n\r\n                            (adCategorie) => {\r\n                                categories.map(\r\n\r\n                                    (filterCategorie) => {\r\n                                        if (adCategorie == filterCategorie.value) {\r\n                                            if (adCategorie == categories.value) {\r\n                                                setCategoriesFiltered(categoriesFiltered + 1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                );\r\n            }\r\n            setShowMoreButton(false);\r\n            setAdList(newAdList);\r\n        } \r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        setSearchBarValue(\"\");\r\n        filterAdsQuantity(originalAdList.length);\r\n    };\r\n\r\n    const onDismissSnackBar = () => setIsSnackBarVisible(false);\r\n    \r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_400Regular,\r\n        Nunito_700Bold,\r\n        Nunito_800ExtraBold\r\n    });\r\n\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Appbar.Header style={styles.appBar}>\r\n                <Appbar.Action icon=\"arrow-left\" onPress={() => navigation.pop()} />\r\n                <Searchbar placeholder=\"Pesquisar\" value={searchBarValue} onChangeText={(text) => filterAdvertisement(text)} style={styles.searchBar} />\r\n                <Appbar.Action icon='refresh' onPress={() => {setLoaded(false), setItensShowed(10)}} />\r\n                <Menu visible={optionsVisible} onDismiss={closeOption} anchor={<Appbar.Action icon='account' onPress={() => openOption()} />}>\r\n                    <Menu.Item onPress={() => { handleLogout(); closeOption(); } } title=\"Deslogar\" />\r\n                    <Menu.Item onPress={() => { viewProfile(); closeOption(); } } title=\"Ver Perfil\" />\r\n\r\n                </Menu>\r\n            </Appbar.Header>\r\n\r\n            <Snackbar\r\n                visible = {isSnackBarVisible}\r\n                onDismiss = {onDismissSnackBar}\r\n                theme = {{colors: {accent: colors.register}}}\r\n                action = {{\r\n                    icon: \"close\",\r\n                    onPress: () => onDismissSnackBar\r\n                }}>\r\n                <Text>{ snackBarText }</Text>\r\n            </Snackbar>\r\n            <Select\r\n                isMulti\r\n                name=\"colors\"\r\n                options={categories}\r\n                placeholder=\"Filtrar por categoria\"\r\n                style={{ width: 500 }}\r\n                className=\"basic-multi-select\"\r\n                onChange= {filterByCategory}\r\n                classNamePrefix=\"select\" \r\n            />\r\n            <ScrollView>\r\n                {\r\n                    advertisementList.map((advertisement, index) => {\r\n                        return (\r\n                            <AnuncioCardComponent key={index} advertisement={advertisement} navigation={navigation} />\r\n                        );\r\n                    })}\r\n            </ScrollView>\r\n\r\n            {showMoreButton ?\r\n                <TouchableOpacity\r\n                    style={{\r\n                        width: \"40%\",\r\n                        height: 50,\r\n                        alignItems: \"center\",\r\n                        marginTop: 20,\r\n                        marginLeft: '2%',\r\n                        justifyContent: 'center',\r\n                        backgroundColor: colors.primary\r\n                    }}\r\n                    onPress={() => handleLoadMore()}\r\n                >\r\n                    <Text style={styles.textButton}>Carregar mais</Text>\r\n                </TouchableOpacity>\r\n                :\r\n                null}\r\n\r\n            <View>\r\n                <FAB\r\n                    style={{ position: 'fixed', right: \"2%\", bottom: 15, backgroundColor: colors.primary }}\r\n                    icon=\"plus\"\r\n                    onPress={() => navigation.push('CreateAdvertisement')} />\r\n            </View>\r\n\r\n            <View style={ styles.spacerStyle }></View>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SellListPageComponent;","import { StyleSheet } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    textContainer: {\r\n        flex: 1,\r\n        flexWrap: \"wrap\",\r\n        marginTop: 24,\r\n        marginHorizontal: 30,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"stretch\",\r\n        flexDirection: \"column\",\r\n    },\r\n    spacerStyle: {\r\n        marginBottom: 15,\r\n    },\r\n    description: {\r\n        color: colors.black,\r\n        fontWeight: 'normal',\r\n        fontSize: 16,\r\n        fontFamily: 'Nunito_400Regular',\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-start\",\r\n        justifyContent: \"center\"\r\n    },\r\n    textTag: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-start\",\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\nexport default styles;","import { StyleSheet } from 'react-native';\r\nimport colors from './colors';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.grayLight,\r\n    },\r\n    title: {\r\n        color: colors.black,\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        fontFamily: 'Nunito_800ExtraBold'\r\n    },\r\n    description: {\r\n        color: colors.grayMedium,\r\n        fontWeight: 'normal',\r\n        fontSize: 16,\r\n        fontFamily: 'Nunito_400Regular'\r\n    },\r\n    textContainer: {\r\n        //marginTop: 10,\r\n        marginBottom: 24,\r\n        marginHorizontal: 30,\r\n        flex: 1,\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignSelf: \"center\",\r\n        flexDirection: \"column\"\r\n    },\r\n    inputView: {\r\n        marginBottom: 8,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        alignSelf: \"stretch\",\r\n        flexDirection: \"column\",\r\n    },\r\n    inputText: {\r\n        height: 45,\r\n        textAlign: \"center\",\r\n        width: \"90%\",\r\n        fontFamily: 'Nunito_400Regular',\r\n        color: colors.black,\r\n        backgroundColor: colors.white\r\n    },\r\n    inputTextContainer: {\r\n        flex: 1,\r\n        marginHorizontal: 30,\r\n        marginTop: 30,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        alignSelf: 'stretch',\r\n        flexDirection: \"column\"\r\n    },\r\n});\r\n\r\nexport default styles;","import { TextInput } from \"react-native-paper\";\r\nimport styles from \"../styles/styleUserRegistrationPage\";\r\nimport colors from \"../styles/colors\";\r\n\r\nconst InputFieldRegistration = (props) => {\r\n    return (\r\n        <TextInput\r\n            { ... props }\r\n            outlineColor = { colors.white }\r\n            activeOutlineColor = { colors.tertiary }\r\n            mode = \"outlined\"\r\n            style = { styles.inputText }\r\n            left = { <TextInput.Icon name = \"signature\" color = { colors.grayMedium } />}\r\n            placeholderTextColor = { colors.grayMedium }\r\n            theme = { { colors: { text: colors.grayMedium } } }\r\n        />\r\n    );\r\n}\r\n\r\nexport default InputFieldRegistration;\r\n","import { StyleSheet } from 'react-native';\r\nimport colors from './colors';\r\n\r\nconst styles = StyleSheet.create({\r\n    textButton:{\r\n      color:colors.white,\r\n      fontFamily:'Nunito_800ExtraBold',\r\n      fontSize:20,\r\n    },\r\n    tituloLogo:{\r\n      alignItems:'center',\r\n      marginBottom:'40%',\r\n    },\r\n    titulo:{\r\n        textAlign:'center',\r\n        \r\n        fontSize:45,\r\n        fontFamily:'Nunito_800ExtraBold'\r\n    },\r\n    container: {\r\n        flex:1,\r\n        backgroundColor: colors.white,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        alignSelf:'stretch',\r\n        flexDirection:'column'\r\n      },\r\n      loginBtn: {\r\n        width: \"80%\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        marginTop: 30,\r\n        justifyContent:'center'\r\n      },\r\n      conditions:{\r\n        textDecorationLine:'underline',\r\n        textDecorationColor:'black',\r\n        marginTop:10\r\n      }\r\n});\r\n\r\nexport default styles;","import styles from \"../styles/styleLandPage\";\r\nimport { TouchableOpacity,Text } from \"react-native\";\r\n\r\nconst MenuButtonComponent = (props) =>{\r\n    return(\r\n        <TouchableOpacity \r\n            style={{ \r\n                width: \"80%\",\r\n                borderRadius: 25,\r\n                height: 50,\r\n                alignItems: \"center\",\r\n                marginTop: 20,\r\n                justifyContent:'center', \r\n                backgroundColor:props.cor\r\n            }} \r\n            onPress={props.onPress}\r\n        >\r\n            <Text style={styles.textButton}>{props.titulo}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nexport default MenuButtonComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { ScrollView, View, Text } from \"react-native\";\r\nimport { Nunito_300Light, Nunito_400Regular, Nunito_800ExtraBold} from '@expo-google-fonts/nunito'\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport styles from \"../../styles/styleCreateAdvertisement\";\r\nimport colors from \"../../styles/colors\";\r\nimport InputFieldRegistration from \"../../components/inputFieldRegistration\";\r\nimport { PaperSelect } from 'react-native-paper-select';\r\nimport { ActivityIndicator, Snackbar, RadioButton, Switch } from \"react-native-paper\";\r\nimport { getAllCategories } from \"../../services/categories\";\r\nimport { createAdvertisement } from \"../../services/advertisementService\";\r\nimport MenuButtonComponent from \"../../components/menuButtonComponent\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useAuth } from \"../../context/userAuth\";\r\nimport SwitchSelector from \"react-native-switch-selector\";\r\nconst CreateAdvertisementComponent = ({navigation}) =>{\r\n    const {user} = useAuth();\r\n    let categoriesList = [];\r\n    let selectedCategoriesList = [];\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState('0');\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [bookState, setBookState] = useState('first');\r\n    const [bookCondition, setBookCondition] = useState('novo');\r\n    const [snackBarText, setSnackBarText] = useState('');\r\n    const [isSnackBarVisible, setIsSnackBarVisible] = useState(false);\r\n    const [categories, setCategories] = useState({\r\n        value: '',\r\n        list: [],\r\n        selectedList: [],\r\n        error: '',\r\n    });\r\n    const [isDonation, setDonation] = useState(false);\r\n\r\n    const updateTitle = (title) =>{\r\n        setTitle(title);\r\n    }\r\n    const updateDescription = (description) =>{\r\n        setDescription(description);\r\n    }\r\n    const updatePrice = (price) =>{\r\n        setPrice(price);\r\n    }\r\n\r\n    const updateSelectedCategories = (value) => {\r\n        selectedCategoriesList = [];\r\n        value.selectedList.map (\r\n            (category, index) => {\r\n                selectedCategoriesList.push(category._id);\r\n            }\r\n        )\r\n        setCategories({\r\n            ...categories,\r\n            selectedList: selectedCategoriesList\r\n        })\r\n    }\r\n\r\n    const handleCategories = async () => {\r\n        if(!loaded){\r\n            await getAllCategories().then(\r\n                (response)=>{\r\n                    if (response.status === true) {\r\n                        setLoaded(true);\r\n                        response.data.result.map(\r\n                            (category, index) => {\r\n                                let categoryObj = { _id: category._id, value: category.description };\r\n                                categoriesList.push(categoryObj); \r\n                            }\r\n                        )\r\n                        setCategories({\r\n                            ...categories,\r\n                            list: categoriesList\r\n                        })\r\n                    }\r\n                    else {\r\n                        setIsSnackBarVisible(true);\r\n                        setSnackBarText(\"Ops, não conseguimos carregar as categorias dos livros.\");\r\n                        setTimeout(() => navigation.pop(), 10000);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleRegister = async () => {\r\n        let registerObj = {\r\n            title: title,\r\n            description: description,\r\n            price: parseInt(price),\r\n            bookCondition: bookCondition,\r\n            categoryIds: categories.selectedList,\r\n            userId: user.id \r\n        }\r\n        return await createAdvertisement(registerObj)\r\n        .then( (response) => {\r\n                console.log(response);\r\n                if (response.status === true) {\r\n                    setIsSnackBarVisible(true);\r\n                    setSnackBarText(\"Anúncio criado com sucesso :)\");\r\n                    setTimeout(() => navigation.pop(), 3000);\r\n                }\r\n                else {\r\n                    setIsSnackBarVisible(true);\r\n                    setSnackBarText(\"Algo deu errado, confira as informações preenchidas e tente novamente.\");\r\n                }\r\n        })\r\n        \r\n    }\r\n    const changeToDonation = () =>{\r\n        setDonation(true);\r\n        setPrice('0');\r\n    }\r\n\r\n    const onDismissSnackBar = () => setIsSnackBarVisible(false);\r\n    const toggleDonation = () => setDonation(!isDonation);\r\n    useEffect(()=>{\r\n        handleCategories();\r\n    })\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_300Light,\r\n        Nunito_400Regular,\r\n        Nunito_800ExtraBold,\r\n    });\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n    return(\r\n        <View style = { styles.container }>\r\n            <SwitchSelector \r\n                style={{marginTop:20}}\r\n                initial ={0}\r\n                onPress={(value) => value == 0 ? setDonation(false) : changeToDonation()}\r\n                options={\r\n                    [   \r\n                        {label:\"VENDA\", value:0},\r\n                        {label:\"DOAÇÃO\", value:1}\r\n                        \r\n                    ]\r\n                }\r\n                textColor={colors.primary}\r\n                selectedColor={colors.white}\r\n                backgroundColor={colors.white}\r\n                buttonColor={colors.primary}\r\n            />\r\n            <ScrollView>\r\n                <View style = { styles.textContainer} >\r\n                    \r\n                    <InputFieldRegistration \r\n                        value = {title}\r\n                        placeholder = \"Título\"\r\n                        onChangeText = { (title) => updateTitle(title) }\r\n                    />\r\n                    <View style = { styles.spacerStyle } />\r\n                    <InputFieldRegistration \r\n                        value = {description}\r\n                        placeholder = \"Descrição\"\r\n                        onChangeText = { (description) => updateDescription(description) }\r\n                    />\r\n                    <View style = { styles.spacerStyle } />\r\n                    \r\n                        \r\n                    {!isDonation ?\r\n                    <InputFieldRegistration \r\n                        editable={!isDonation}\r\n                        value = {price}\r\n                        placeholder = \"Preço\"\r\n                        onChangeText = { (price) => updatePrice(price) }\r\n                    /> : null\r\n                    }\r\n                    \r\n                    <View style = { styles.spacerStyle } />\r\n                    <Text style = { styles.description }>\r\n                        Condição do Livro\r\n                    </Text>\r\n                    <View style = { styles.spacerStyle } />\r\n                    <View style = { styles.textTag } >\r\n                        <RadioButton\r\n                            value = 'Novo'\r\n                            status = { bookState === 'first' ? 'checked' : 'unchecked' }\r\n                            onPress = { () => {\r\n                                                setBookCondition('novo'),\r\n                                                setBookState('first') \r\n                                              }}\r\n                            color = { colors.primary }\r\n                            uncheckedColor = { colors.secundary }\r\n                        />\r\n                        <Text>\r\n                            Novo\r\n                        </Text>\r\n                    </View>\r\n                    <View style = { styles.textTag } >\r\n                        <RadioButton\r\n                            value = 'Usado'\r\n                            status = { bookState === 'second' ? 'checked' : 'unchecked' }\r\n                            onPress = { () => {\r\n                                                setBookCondition('usado'),\r\n                                                setBookState('second') \r\n                                              }}                                \r\n                            color = { colors.primary }\r\n                            uncheckedColor = { colors.secundary }\r\n                        />\r\n                        <Text>\r\n                            Usado\r\n                        </Text>\r\n                    </View>\r\n                    <View style = { styles.spacerStyle } />\r\n                    <PaperSelect\r\n                        label='Categorias do livro'\r\n                        value={categories.value}\r\n                        onSelection={(value) => {\r\n                            updateSelectedCategories(value);\r\n                        }}\r\n                        arrayList={[...categories.list]}\r\n                        selectedArrayList={categories.selectedList}\r\n                        errorText={categories.error}\r\n                        multiEnable={true}\r\n                        placeholder = \"Categoria\"\r\n                        textInputMode=\"flat\"\r\n                        dialogTitleStyle={{ color: colors.black }}\r\n                        activeUnderlineColor = { colors.secundary }\r\n                        searchStyle={{ iconColor: colors.grayLight,\r\n                                       backgroundColor: colors.tertiary,\r\n                                       borderColor: colors.secundary }}\r\n                        textInputBackgroundColor = { colors.secundary }\r\n                    />\r\n                    <View style = { styles.spacerStyle } />\r\n                    <MenuButtonComponent\r\n                        titulo = \"Criar anúncio\"\r\n                        cor = { colors.primary }\r\n                        onPress = { () => handleRegister() }\r\n                    />\r\n\r\n                </View>\r\n            </ScrollView>\r\n\r\n            <Snackbar\r\n                visible = {isSnackBarVisible}\r\n                onDismiss = {onDismissSnackBar}\r\n                theme = {{colors: {accent: colors.register}}}\r\n                action = {{\r\n                    icon: \"close\",\r\n                    onPress: () => onDismissSnackBar\r\n                }}>\r\n                <Text>{ snackBarText }</Text>\r\n            </Snackbar>\r\n\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateAdvertisementComponent;","import axios from \"axios\";\r\n\r\nconst notifyInterest = async(notification)=>{\r\n    let response ={};\r\n    await axios.post(process.env.BASE_URL + '/user/createNotification', notification)\r\n        .then(res =>{\r\n            response = res;\r\n        })\r\n        .catch(err =>{\r\n            console.log(err.response);\r\n        });\r\n    return response;\r\n}\r\n\r\nconst getNotifications = async(user)=>{\r\n    let response = {};\r\n    await axios.post(process.env.BASE_URL + '/user/getNotifications', user)\r\n        .then((res)=>{\r\n            response = res.data.data.data.result;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        });\r\n    \r\n    return response;\r\n}\r\n\r\nconst readNotification = async(notification)=>{\r\n    let response = {};\r\n    await axios.post(process.env.BASE_URL + '/user/readNotification', notification)\r\n        .then((res)=>{\r\n            response = res;\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        })\r\n    return response;\r\n}\r\n\r\nexport {notifyInterest, getNotifications, readNotification};","import colors from \"./colors\"\r\nimport { StyleSheet } from \"react-native\"\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingBottom: '8%'\r\n    },\r\n    appBar:{\r\n        backgroundColor:colors.primary,\r\n        color:colors.primary,\r\n        flexDirection:'row',\r\n        alignContent: 'flex-start',\r\n    },\r\n    appBarItem:{\r\n        flex:1\r\n    },\r\n    appBarTitleItem:{\r\n        fontSize:20,\r\n        fontFamily:' Nunito_700Bold',\r\n        textAlign: \"left\",\r\n        alignSelf:\"left\",\r\n        color: colors.white\r\n    },\r\n    tituloTag:{\r\n        fontSize:28,\r\n        fontFamily:' Nunito_700Bold',\r\n        paddingLeft: \"5%\",\r\n    },\r\n    textoTag:{\r\n        fontSize:18,\r\n        fontFamily: 'Nunito_400Regular',\r\n        paddingLeft: \"5%\",\r\n    },\r\n    bookConditionTag:{\r\n        fontSize:18,\r\n        fontFamily: 'Nunito_400Regular',\r\n        textTransform:'capitalize',\r\n        paddingLeft: \"5%\",\r\n    },\r\n    itemTag:{\r\n        marginTop:'10%'\r\n    },\r\n    buttonUpdate:{\r\n        flex:1, \r\n        backgroundColor:colors.primary, \r\n        margin:'5%'\r\n    },\r\n    buttonCancel:{\r\n        flex:1, \r\n        backgroundColor:colors.register, \r\n        margin:'5%'\r\n    },\r\n    textButtonUpdate:{\r\n        fontSize:20,\r\n        fontFamily:' Nunito_700Bold',\r\n        color:colors.white\r\n    },\r\n    textInput:{\r\n        height: 45,\r\n        textAlign: \"center\",\r\n        width: \"90%\",\r\n        fontFamily: 'Nunito_400Regular',\r\n        color: colors.black,\r\n        backgroundColor: colors.white,\r\n        marginLeft: \"5%\",\r\n    },\r\n    image: {\r\n        padding: '30%',\r\n        width: '100%',\r\n        resizeMode: \"contain\"\r\n    },\r\n    spacerStyle: {\r\n        paddingTop: 20,\r\n    },\r\n    textTag: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        alignSelf: \"flex-start\",\r\n        justifyContent: \"center\",\r\n        paddingLeft: \"5%\",\r\n    }\r\n})\r\n\r\nexport default styles;","import React, { useState} from \"react\";\r\nimport { View, Text, Image } from \"react-native\";\r\nimport {Appbar, Menu, Button, Dialog, Portal, Paragraph, TextInput, RadioButton, Snackbar} from 'react-native-paper'\r\nimport colors from \"../../styles/colors\";\r\nimport { \r\n    Nunito_200ExtraLight,\r\n    Nunito_200ExtraLight_Italic,\r\n    Nunito_300Light,\r\n    Nunito_400Regular,\r\n    Nunito_700Bold,\r\n  } from '@expo-google-fonts/nunito'\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport { deleteAdvertisement, updateAdvertisement, uploadImage, getAdvertisement} from \"../../services/advertisementService\";\r\n//import { notifyInterest, getNotifications } from \"../../services/notificationServices\";\r\nimport { notifyInterest, getNotifications } from \"../../services/notificationService.js\";\r\n\r\nimport styles from \"../../styles/styleAdvertisementPage\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useAuth } from \"../../context/userAuth\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as DocumentPicker from 'expo-document-picker';\r\n\r\nconst AdvertisementPageComponent = ({route, navigation}) =>{\r\n    const {user} = useAuth();\r\n    const anuncio = route.params;\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [optionsVisible, setOptionsVisible] = useState(false);\r\n    const [deleteVisible, setDeleteVisible] = useState(false);\r\n    const [update,setUpdate] = useState(false);\r\n    const [description,setDescription] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [bookCondition, setBookCondition] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [image, setImageUrl] = useState('');\r\n    const [isOwner, setOwner] = useState(false);\r\n    const [imageFile, setImageFile] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n    const [barVisible, setBarVisible] = useState(false);\r\n    const [snackBarText,setSnackText] = useState('');\r\n    const openDelete = () => setDeleteVisible(true);\r\n    const closeDelete = () => setDeleteVisible(false);\r\n    const openOption = () => setOptionsVisible(true);\r\n    const closeOption = () => setOptionsVisible(false);\r\n    const onDismissSnackBar = () => setBarVisible(false);\r\n\r\n    \r\n    if(!loaded){\r\n        setDescription(anuncio.description);\r\n        setPrice(anuncio.price);\r\n        setBookCondition(anuncio.bookCondition);\r\n        setTitle(anuncio.title);\r\n        setImageUrl(anuncio.imageUrl);\r\n        setLoaded(true);\r\n        if(user.id === anuncio.userId){\r\n            setOwner(true);\r\n        }\r\n    }\r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_200ExtraLight,\r\n        Nunito_200ExtraLight_Italic,\r\n        Nunito_300Light,\r\n        Nunito_400Regular,\r\n        Nunito_700Bold\r\n      });\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n    \r\n    const refreshAd = async () =>{\r\n        await getAdvertisement(anuncio._id).then(\r\n            (res)=>{\r\n                setDescription(res.description);\r\n                setPrice(res.price);\r\n                setBookCondition(res.bookCondition);\r\n                setTitle(res.title);\r\n                setImageUrl(res.imageUrl);\r\n            }\r\n        )\r\n    }\r\n    const handleDelete = async () => {\r\n        await deleteAdvertisement(anuncio)\r\n            .then(\r\n                (response)=>{\r\n                    setDeleteVisible(false);\r\n                    if(response.data.status === true){\r\n                        navigation.pop();\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    const handleUpdate = async() =>{\r\n        let anuncioObj = anuncio;\r\n        anuncioObj.description = description;\r\n        anuncioObj.price = parseInt(price);\r\n        anuncioObj.bookCondition = bookCondition;\r\n        anuncioObj.title = title;\r\n        await updateAdvertisement(anuncioObj)\r\n            .then(\r\n                (response)=>{\r\n                    console.log(response);\r\n                    setUpdate(false);\r\n                    if(response.data.status === true){\r\n                        refreshAd();\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                (error)=>{\r\n                    setUpdate(false);\r\n                }\r\n            )\r\n    }\r\n    const upload = async (image) =>{\r\n        if(image !== ''){\r\n            let id = anuncio._id\r\n            await uploadImage(id, image).then(\r\n                ()=>refreshAd()\r\n            );            \r\n        }\r\n    }\r\n    const addImage = async () => {\r\n        if(!uploading){\r\n            setUploading(true);\r\n            try{\r\n                let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n                if (permissionResult.granted === false) {\r\n                    alert('Permissão para acessar camera é necessária!');\r\n                    return;\r\n                }\r\n                let pickerResult = await DocumentPicker.getDocumentAsync();\r\n                console.log(pickerResult);\r\n                if(pickerResult.cancelled === true){\r\n                    return;\r\n                }else{\r\n                    let image = pickerResult;\r\n                    await upload(image).then(\r\n                        ()=>{\r\n                            setSnackText(\"Imagem atualizada com sucesso\");\r\n                            setBarVisible(true);\r\n                        }\r\n                    );\r\n                }\r\n                \r\n                \r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    const sendNotifyInterest = async ()=>{\r\n        const newNotification = {\r\n            advertisementId: anuncio._id, \r\n            advertisementTitle: anuncio.title,\r\n            interestedId: user.id, \r\n            nameInterested:user.first_name,\r\n            numberInterested:user.cellphone,\r\n            ownerAdId: anuncio.userId, \r\n            dateNotified: Date.now(),\r\n            read:false\r\n        }\r\n        await notifyInterest(newNotification).then(\r\n            (res)=>console.log(res)\r\n        )\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <View style = { styles.container }>\r\n            <Appbar.Header style={styles.appBar}>\r\n                <Appbar.Action icon='arrow-left' style={{flex:1, alignItems:'left'}} onPress={()=>navigation.pop()}/>\r\n                <Text style={styles.appBarTitleItem}>{anuncio.title}</Text>\r\n                {isOwner ? \r\n                    <Menu visible={optionsVisible} onDismiss={closeOption} anchor={<Appbar.Action icon='dots-vertical' color = { colors.white } style={styles.appBarItem} onPress={()=>openOption()}/>}>\r\n                        <Menu.Item onPress={() => {openDelete(), setOptionsVisible(false)}} title=\"Deletar\"/>\r\n                        <Menu.Item onPress={()=>{setUpdate(true), setOptionsVisible(false)}} title=\"Atualizar\"/>\r\n                    </Menu>\r\n                    :\r\n                    null\r\n                }\r\n            </Appbar.Header>\r\n\r\n            <View>\r\n                <View style={styles.spacerStyle}></View>\r\n                { (image === undefined) ?\r\n                    <Text style={styles.tituloTag}>Anúncio sem imagem :(</Text>\r\n                    :\r\n                    <Image\r\n                    style = { styles.image }\r\n                    source = { { uri: image } }\r\n                    />\r\n                } \r\n                {isOwner && (image === undefined || image === '') ? <Button onPress={()=>addImage()}>Adicionar imagem (max 5MB)</Button> : null}\r\n                {isOwner && (image !== undefined && image !== '' ) ? <Button onPress={()=>addImage()}>Atualizar imagem (max 5MB)</Button> : null}\r\n            </View>\r\n            <View style={styles.itemTag}>\r\n                <Text style={styles.tituloTag}>Título</Text>\r\n                \r\n                {update ? \r\n                    (<TextInput style={styles.textInput} \r\n                        label='Título' \r\n                        value={title} \r\n                        outlineColor = { colors.white }\r\n                        activeOutlineColor = { colors.tertiary }\r\n                        mode = \"outlined\"\r\n                        placeholderTextColor = { colors.grayMedium }\r\n                        theme = { { colors: { text: colors.grayMedium } } } \r\n                        onChangeText={(text)=>setTitle(text)}/>\r\n                    )\r\n                    :\r\n                    (<Text style={styles.textoTag}>{anuncio.title}</Text>)\r\n                }\r\n            </View>\r\n            <View style={styles.itemTag}>\r\n                <Text style={styles.tituloTag}>Descrição</Text>\r\n                \r\n                {update ? \r\n                    (<TextInput style={styles.textInput}\r\n                        label='Descrição'\r\n                        value={description} \r\n                        outlineColor = { colors.white }\r\n                        activeOutlineColor = { colors.tertiary }\r\n                        mode = \"outlined\"\r\n                        placeholderTextColor = { colors.grayMedium }\r\n                        theme = { { colors: { text: colors.grayMedium } } } \r\n                        onChangeText={(text)=>setDescription(text)}/>\r\n                        )\r\n                    :\r\n                    (<Text style={styles.textoTag}>{anuncio.description}</Text>)\r\n                }\r\n            </View>\r\n            <View style={styles.itemTag}>\r\n                <Text style={styles.tituloTag}>Preço</Text>\r\n                \r\n                {update ? \r\n                    (<TextInput style={styles.textInput} \r\n                        keyboardType='number-pad'\r\n                        label='Preço' \r\n                        value={price} \r\n                        outlineColor = { colors.white }\r\n                        activeOutlineColor = { colors.tertiary }\r\n                        mode = \"outlined\"\r\n                        placeholderTextColor = { colors.grayMedium }\r\n                        theme = { { colors: { text: colors.grayMedium } } } \r\n                        onChangeText={(price)=>setPrice(price)}/>\r\n                    )\r\n                    :\r\n                    (<Text style={styles.textoTag}>R${anuncio.price}</Text>)\r\n                }\r\n            </View>\r\n            <View style={styles.itemTag}>\r\n                <Text style={styles.tituloTag}>Condição do livro</Text>\r\n                \r\n                {update ? \r\n                (\r\n                <View >\r\n                    <View style={styles.textTag}>\r\n                        <RadioButton \r\n                            color = { colors.primary }\r\n                            uncheckedColor = { colors.secundary }\r\n                            value='novo' \r\n                            status={bookCondition === 'novo' ? 'checked' : 'unchecked'}\r\n                            onPress={()=>setBookCondition('novo')}\r\n                        />\r\n                        <Text style={styles.bookConditionTag}>Novo</Text>\r\n                    </View>\r\n                    <View style={styles.textTag}>\r\n                        <RadioButton \r\n                            color = { colors.primary }\r\n                            uncheckedColor = { colors.secundary }\r\n                            value='usado' \r\n                            status={bookCondition === 'usado' ? 'checked' : 'unchecked'}\r\n                            onPress={()=>setBookCondition('usado')}\r\n                        />\r\n                        <Text style={styles.bookConditionTag}>Usado</Text>\r\n                    </View>\r\n                </View>\r\n                )\r\n                :\r\n                (<Text style={styles.bookConditionTag}>{anuncio.bookCondition}</Text>)\r\n                }\r\n            </View>\r\n            {!isOwner ?\r\n                <View>\r\n                    <Button style={styles.buttonUpdate} labelStyle={styles.textButtonUpdate} onPress={()=>sendNotifyInterest()} mode=\"contained\">TENHO INTERESSE</Button>\r\n                </View>\r\n                :\r\n                null\r\n            }\r\n            {update ? \r\n            (\r\n                <View style={{flexDirection:'row', justifyContent:'center', alignItems:'center', marginTop:'5%'}}>\r\n                    <Button style={styles.buttonCancel} labelStyle={styles.textButtonUpdate} mode=\"contained\" onPress={()=>{setUpdate(false)}}>Cancelar</Button>\r\n                    <Button style={styles.buttonUpdate} labelStyle={styles.textButtonUpdate} mode=\"contained\" onPress={()=>handleUpdate()}>Salvar</Button>\r\n                </View>\r\n            ):\r\n                null\r\n            } \r\n            \r\n\r\n            <Portal>\r\n                <Dialog visible={deleteVisible} onDismiss={() => closeDelete()}>\r\n                    <Dialog.Title> Atenção </Dialog.Title>\r\n                    <Dialog.Content>\r\n                        <Paragraph>Tem certeza que deseja deletar o anúncio?</Paragraph>\r\n                    </Dialog.Content>\r\n                    <Dialog.Actions>\r\n                        <Button style={{textAlign:'left'}} onPress={() => closeDelete()}>Não</Button>\r\n                        <Button onPress={() => handleDelete()}>Sim</Button>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n            </Portal>\r\n            \r\n            <Snackbar visible={barVisible} \r\n                      onDismiss={onDismissSnackBar} \r\n                      action={{label:'OK',onPress:()=>onDismissSnackBar}}\r\n            >\r\n              <Text>{snackBarText}</Text>\r\n            </Snackbar>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AdvertisementPageComponent;\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../../context/userAuth\";\r\nimport styles from \"../../styles/styleAdvertisementPage\";\r\nimport { Appbar, List, ActivityIndicator, Button, Menu, TextInput, Portal, Dialog, Paragraph, Badge } from \"react-native-paper\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { getAdFromUser } from \"../../services/advertisementService\";\r\nimport colors from \"../../styles/colors\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport { deleteUser, updateUser } from \"../../services/userService\";\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport { \r\n    Nunito_400Regular,\r\n    Nunito_700Bold,\r\n    Nunito_800ExtraBold\r\n  } from '@expo-google-fonts/nunito';\r\nimport { getNotifications, readNotification } from \"../../services/notificationService.js\";\r\nimport { copyFileSync, read } from \"fs\";\r\n\r\n\r\nconst UserProfileComponent = ({navigation}) =>{\r\n    const {user} = useAuth();\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [expandedNotifications, setExpandedNotifications] = useState(false);\r\n    const [loadAds, setLoadAds] = useState(false);\r\n    const [isLoadedNotifications, setLoadNotifications] = useState(false);\r\n    const [advertisementList, setAdvertisementList] = useState([]);\r\n    const [optionsVisible, setOptionsVisible] = useState(false);\r\n    const [deleteVisible, setDeleteVisible] = useState(false);\r\n    const [cellphone, setCellphone] = useState(user.cellphone);\r\n    const [update,setUpdate] = useState(false);\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [unreadNotifications, setUnreadNotifications] = useState(0);\r\n    const openDelete = () => setDeleteVisible(true);\r\n    const closeDelete = () => setDeleteVisible(false);\r\n    const openOption = () => setOptionsVisible(true);\r\n    const closeOption = () => setOptionsVisible(false);\r\n    const handlePress = async () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    const handlePressNotification = async () => {\r\n        setExpandedNotifications(!expandedNotifications);\r\n    };\r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_400Regular,\r\n        Nunito_700Bold,\r\n        Nunito_800ExtraBold\r\n      });\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n\r\n\r\n    const loadAdsFromUser =  async () =>{\r\n        await getAdFromUser(user.id).then(\r\n            (ads)=>{\r\n                setAdvertisementList(ads);\r\n                setLoadAds(true);\r\n            }\r\n        )\r\n    }\r\n\r\n    const loadNotifications = async () => {\r\n        await getNotifications(user).then((res)=>{\r\n                setNotifications(res);\r\n                getUnreadNotificationsCount(res);\r\n                setLoadNotifications(true);\r\n                \r\n            }\r\n        )\r\n    }\r\n\r\n    const getUnreadNotificationsCount = (res) =>{\r\n        let unreadCount = 0;\r\n        if(res.length > 0){\r\n            res.map(notf=>{\r\n                if(notf.read === false){\r\n                    unreadCount++;\r\n                }\r\n            })\r\n        }\r\n        setUnreadNotifications(unreadCount);\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        await deleteUser(user)\r\n            .then(\r\n                (response)=>{\r\n                    setDeleteVisible(false);\r\n                    if(response.data.status === true){\r\n                        navigation.pop();\r\n                    }\r\n                }\r\n            )\r\n    }\r\n    const handleUpdate = async() =>{\r\n        let userUpdt = user;\r\n        userUpdt.cellphone = cellphone;\r\n        await updateUser(userUpdt).then(\r\n            (res)=>{\r\n                setUpdate(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    if(!loadAds){\r\n        loadAdsFromUser();\r\n        loadNotifications();\r\n    }\r\n\r\n    const confirmNotify = async(notification) => {\r\n        await readNotification(notification).then(\r\n            (res)=>{\r\n                loadNotifications();\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    const showAdPage = (ad) =>{\r\n        navigation.push('AdvertisementPage', ad);\r\n    }\r\n    \r\n\r\n    return(\r\n        <View>\r\n            <Appbar.Header style={styles.appBar}>\r\n                <Appbar.Action icon='arrow-left' style={{flex:1, alignItems:'left'}} onPress={()=>navigation.pop()}/>\r\n                <Text style={styles.appBarTitleItem}>Meu Perfil</Text>\r\n                <Menu visible={optionsVisible} onDismiss={closeOption} anchor={<Appbar.Action icon='dots-vertical' color = { colors.white } style={styles.appBarItem} onPress={()=>openOption()}/>}>\r\n                            <Menu.Item onPress={() => {openDelete(); closeOption()}} title=\"Deletar\"/>\r\n                            <Menu.Item onPress={()=>{setUpdate(true); closeOption()}} title=\"Atualizar\"/>\r\n                </Menu>\r\n            </Appbar.Header>\r\n            <View style={styleUser.primeiraParte}>\r\n                <View style={styleUser.drawImg}>\r\n                </View>\r\n                <View style={styleUser.userData}>\r\n                    <Text style={styleUser.userData}>Nome: {user.first_name} {user.last_name}</Text>\r\n                    <Text style={styleUser.userData}>Email: {user.email}</Text>\r\n                    <Text style={styleUser.userData}>RA: {user.ra}</Text>\r\n                    {!update ? \r\n                        <Text style={styleUser.userData}>Celular: {user.cellphone}</Text> :\r\n                        <TextInput theme={{ colors: {text: colors.grayLight, primary: colors.grayMedium, secundary: colors.grayMedium} }}  label=\"Celular\" value={cellphone} onChangeText={(text)=>setCellphone(text)}></TextInput>\r\n                    }\r\n                </View>\r\n            </View>\r\n            {update ? \r\n            (\r\n                <View style={{flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\r\n                    <Button style={styles.buttonCancel} labelStyle={styles.textButtonUpdate} mode=\"contained\" onPress={()=>{setUpdate(false)}}>Cancelar</Button>\r\n                    <Button style={styles.buttonUpdate} labelStyle={styles.textButtonUpdate} mode=\"contained\" onPress={()=>handleUpdate()}>Salvar</Button>\r\n                </View>\r\n            ):\r\n                null\r\n            } \r\n            <View style={styleUser.oldAdSection}>\r\n            {advertisementList.length > 0 ?\r\n            \r\n                <List.Section title=\"\">\r\n                    <List.Accordion\r\n                        title=\"Meus anúncios\"\r\n                        titleStyle={{fontFamily:'Nunito_800ExtraBold'}}\r\n                        expanded={expanded}\r\n                        onPress={() => handlePress()}\r\n                        style={{backgroundColor:colors.primary}}\r\n                    >\r\n                        {!loadAds ? \r\n                            <ActivityIndicator style={{margin:'20px'}}/>:\r\n                            advertisementList.map(\r\n                                (ads, index)=>{\r\n                                    return(\r\n                                        <List.Item \r\n                                            key={index} \r\n                                            style={{backgroundColor:colors.secundary}} \r\n                                            title={ads.title} \r\n                                            titleStyle={{fontFamily:'Nunito_800ExtraBold'}} \r\n                                            descriptionStyle={{fontFamily:'Nunito_800ExtraBold'}} \r\n                                            description={\"R$ \"+ads.price}\r\n                                            onPress={()=>showAdPage(ads)}\r\n                                        />\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </List.Accordion>\r\n                </List.Section> : null\r\n            }\r\n                {notifications.length > 0 ? \r\n                    <List.Section title=\"\">\r\n                        <List.Accordion\r\n                            title=\"Minhas notificações\"\r\n                            left={props =><Badge size={25}>{unreadNotifications}</Badge>}\r\n                            titleStyle={{fontFamily:'Nunito_800ExtraBold'}}\r\n                            expanded={expandedNotifications}\r\n                            onPress={() => handlePressNotification()}\r\n                            style={{backgroundColor:colors.primary}}\r\n                        >\r\n                            {!isLoadedNotifications ? \r\n                                <ActivityIndicator style={{margin:'20px'}}/>:\r\n                                notifications.map(\r\n                                    (nots, index)=>{\r\n                                        if(!nots.read){\r\n\r\n                                            return(\r\n                                                <List.Item \r\n                                                    key={index} \r\n                                                    style={{backgroundColor:colors.secundary}} \r\n                                                    title={nots.nameInterested  + ' - ' + nots.numberInterested} \r\n                                                    titleStyle={{fontFamily:'Nunito_800ExtraBold'}} \r\n                                                    descriptionStyle={{fontFamily:'Nunito_800ExtraBold'}} \r\n                                                    description={nots.advertisementTitle + \" - Pressione para confirmar leitura\"}\r\n                                                    onPress={()=>confirmNotify(nots)}\r\n                                                />\r\n                                            )\r\n                                        }else{\r\n                                            return(\r\n                                                <List.Item \r\n                                                    key={index} \r\n                                                    style={{backgroundColor:colors.grayMedium}} \r\n                                                    title={nots.nameInterested  + ' - ' + nots.numberInterested} \r\n                                                    titleStyle={{fontFamily:'Nunito_800ExtraBold'}} \r\n                                                    descriptionStyle={{fontFamily:'Nunito_800ExtraBold'}} \r\n                                                    description={nots.advertisementTitle}\r\n                                                    //onPress={()=>confirmNotify(nots)}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        </List.Accordion>\r\n                    </List.Section> : null\r\n                }\r\n                \r\n            </View>\r\n            <Portal>\r\n                <Dialog visible={deleteVisible} onDismiss={() => closeDelete()}>\r\n                    <Dialog.Title> ATENÇÃO </Dialog.Title>\r\n                    <Dialog.Content>\r\n                        <Paragraph>TEM CERTEZA QUE DESEJA DELETAR SEU USUÁRIO?</Paragraph>\r\n                    </Dialog.Content>\r\n                    <Dialog.Actions>\r\n                        <Button style={{textAlign:'left'}} onPress={() => closeDelete()}>NÃÃÃÃÃO</Button>\r\n                        <Button onPress={() => handleDelete()}>sim</Button>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n            </Portal>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default UserProfileComponent;\r\n\r\nconst styleUser = StyleSheet.create({\r\n    primeiraParte:{\r\n        flexDirection:'column'\r\n    },\r\n    drawImg:{\r\n        backgroundColor:colors.grayMedium,\r\n        width:'300px',\r\n        height:'160px',\r\n        margin:'40px',\r\n    },\r\n    userData:{\r\n        flexDirection:'column',\r\n        margin:'5px',\r\n        fontFamily:'Nunito_800ExtraBold',\r\n    }\r\n})","import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport LoggedLandPageComponent from '../features/logged-land-page/loggedLandPageComponent';\r\nimport DonationListPageComponent from '../features/donation-list-page/donationListPageComponent';\r\nimport SellListPageComponent from '../features/sell-list-page/sellListPageComponent';\r\nimport CreateAdvertisementComponent from '../features/create-advertisement/create-advertisement';\r\nimport AdvertisementPageComponent from '../features/advertisement-page/advertisementPage';\r\nimport UserProfileComponent from '../features/user-profile-page/userProfilePageComponent';\r\nconst Stack = createStackNavigator();\r\n\r\nconst AppRoutes = () => {\r\n\r\n    return(\r\n        <Stack.Navigator>\r\n            <Stack.Screen name=\"LoggedLandPage\" component={LoggedLandPageComponent} options={{headerShown:null}}/>\r\n            <Stack.Screen name=\"SellListPage\" component={SellListPageComponent} options={{headerShown:null}}/>\r\n            <Stack.Screen name=\"DonationListPage\" component={DonationListPageComponent} options={{headerShown:null}}/>\r\n            <Stack.Screen name=\"CreateAdvertisement\" component={CreateAdvertisementComponent}/>\r\n            <Stack.Screen name=\"AdvertisementPage\" component={AdvertisementPageComponent} options={{headerShown:null}}/>\r\n            <Stack.Screen name=\"UserProfile\" component={UserProfileComponent} options={{headerShown:null}}/>\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default AppRoutes;","import React from \"react\";\r\nimport { View, Text, Image } from \"react-native\";\r\nimport styles from \"../../styles/styleLandPage\";\r\nimport colors from \"../../styles/colors\";\r\nimport { Nunito_200ExtraLight, Nunito_200ExtraLight_Italic, Nunito_300Light, Nunito_800ExtraBold} from '@expo-google-fonts/nunito'\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport MenuButtonComponent from \"../../components/menuButtonComponent\";\r\nimport logo from '../../assets/images/logoMaior.png';\r\nimport AppLoading from 'expo-app-loading';\r\nconst LandPageComponent = ({navigation}) => {\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_200ExtraLight,\r\n        Nunito_200ExtraLight_Italic,\r\n        Nunito_300Light,\r\n        Nunito_800ExtraBold\r\n    })\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n\r\n    return (\r\n            <View style={styles.container}>\r\n                \r\n                <View style={styles.tituloLogo}>\r\n                    <Text style={styles.titulo}>VParc</Text>\r\n                    <Image source={logo} style={{width:180, height:180}}/>\r\n                </View>\r\n\r\n                <MenuButtonComponent \r\n                    titulo=\"Criar conta\"\r\n                    cor={colors.primary}\r\n                    onPress = {() => navigation.push('UserRegistration')}\r\n                />\r\n                <MenuButtonComponent \r\n                    titulo=\"Logar\"\r\n                    cor={colors.register}\r\n                    onPress={()=>navigation.push('Login')}\r\n                />\r\n                \r\n            </View>\r\n    );\r\n}\r\n\r\nexport default  LandPageComponent;\r\n\r\n","import { StyleSheet } from 'react-native';\r\nimport colors from './colors';\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    loginTxt:{\r\n      color:'white', \r\n      fontWeight:'bold', \r\n      fontSize:17, \r\n      fontFamily:'Nunito_800ExtraBold'\r\n    },\r\n    titulo:{\r\n      textAlign:'center',\r\n      color:'white',\r\n      fontWeight:'bold',\r\n      fontSize:50,\r\n      fontFamily:'Nunito_800ExtraBold'\r\n    },\r\n    container: {\r\n      flex:1,\r\n      backgroundColor: colors.secundary,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      alignSelf:'stretch',\r\n      flexDirection:'column'\r\n    },\r\n    inputView: {\r\n      backgroundColor: colors.tertiary,\r\n      borderRadius: 30,\r\n      height: 50,\r\n      marginBottom: 20,\r\n      width: \"80%\",\r\n      alignItems: \"center\",\r\n      borderWidth:2,\r\n      borderColor:'white'\r\n    },\r\n    inputText: {\r\n      height: 45,\r\n      color:'black',\r\n      textAlign:\"center\",\r\n      paddingRight:20,\r\n      backgroundColor:colors.tertiary,\r\n      width:'90%',\r\n      borderColor:colors.tertiary,\r\n      fontFamily:'Nunito_800ExtraBold',\r\n    },\r\n    forgot_btn:{\r\n      marginTop:20,\r\n    },\r\n    forgot_txt:{\r\n      fontWeight:'bold', \r\n      fontSize:12, \r\n      fontFamily:'Nunito_800ExtraBold'\r\n    },\r\n    loginBtn: {\r\n      width: \"80%\",\r\n      borderRadius: 25,\r\n      height: 50,\r\n      alignItems: \"center\",\r\n      marginTop: 25,\r\n      backgroundColor: colors.primary,\r\n      justifyContent:'center'\r\n    },\r\n  });\r\n\r\n\r\nexport default styles;","import { TextInput} from \"react-native-paper\";\r\nimport styles from \"../styles/styleLoginPage\";\r\nimport colors from \"../styles/colors\";\r\n\r\nconst InputFieldLogin = (props) =>{\r\n    return (\r\n      <TextInput \r\n        {...props}\r\n        outlineColor={colors.tertiary}\r\n        activeOutlineColor='#ffffff'\r\n        mode='flat'\r\n        style={styles.inputText}\r\n        underlineColor={colors.tertiary}  \r\n        activeUnderlineColor={colors.tertiary} \r\n        left={<TextInput.Icon name='signature'/>}\r\n      />\r\n  );\r\n  }\r\n\r\n  export default InputFieldLogin;","import { TouchableOpacity,  Text, View, Image } from \"react-native\";\r\nimport React, {  useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport {  Button,ActivityIndicator, Snackbar } from \"react-native-paper\";\r\nimport { \r\n  Nunito_200ExtraLight,\r\n  Nunito_200ExtraLight_Italic,\r\n  Nunito_300Light,\r\n  Nunito_800ExtraBold,\r\n} from '@expo-google-fonts/nunito'\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport styles from '../../styles/styleLoginPage';\r\nimport colors from \"../../styles/colors\";\r\nimport InputFieldLogin from '../../components/inputFieldLogin';\r\nimport logo from '../../assets/images/logoBranco.png';\r\nimport {useAuth} from \"../../context/userAuth\";\r\nimport AppLoading from 'expo-app-loading';\r\n\r\nconst LoginComponent = ({navigation}) =>{\r\n    const { signIn } = useAuth();\r\n    const [isLogin,setLogin] = useState(false);\r\n    const [email,setEmail] = useState('');\r\n    const [senha,setSenha] = useState('');\r\n    const [barVisible, setBarVisible] = useState(false);\r\n    const [snackBarText,setSnackText] = useState('');\r\n\r\n    \r\n    const updateEmail = (email) =>{\r\n      setEmail(email);\r\n    }\r\n\r\n    const updateSenha = (senha) =>{\r\n      setSenha(senha);\r\n    }\r\n\r\n    const onDismissSnackBar = () => setBarVisible(false);\r\n\r\n    const handleLogin = async () =>{\r\n      if(!isLogin){\r\n        setLogin(true);\r\n        await signIn(email, senha).then(\r\n          (response)=>{\r\n            if(response.status !== true){\r\n              setLogin(false);\r\n              setSnackText(response.message);\r\n              setBarVisible(true);\r\n            }\r\n          }\r\n        );\r\n        \r\n      }\r\n    }\r\n\r\n    \r\n\r\n    let [fontsLoaded] = useFonts({\r\n      Nunito_200ExtraLight,\r\n      Nunito_200ExtraLight_Italic,\r\n      Nunito_300Light,\r\n      Nunito_800ExtraBold\r\n    });\r\n    if (!fontsLoaded) {\r\n      return <AppLoading />;\r\n    }\r\n    return(\r\n        <View style={styles.container}>\r\n            <StatusBar style=\"auto\"/>\r\n            {!isLogin ? (\r\n              <View style={{width:'100%', height:'100%',alignItems:'center'}}>\r\n                \r\n                <View styles={{alignItems:'center'}}>\r\n                  <Text style={styles.titulo}>VParc</Text>\r\n                  <Image source={logo} style={{width:180, height:180}}/>\r\n                </View>\r\n\r\n                <View style={{marginTop:'20%', width:'100%', alignItems:'center'}}>\r\n                  <View style={styles.inputView}> \r\n                      <InputFieldLogin\r\n                        value={email}\r\n                        placeholder=\"Email\"\r\n                        onChangeText={(email)=>updateEmail(email)}\r\n                      />\r\n                  </View>  \r\n                \r\n                  <View style={styles.inputView}> \r\n                      <InputFieldLogin\r\n                        value={senha}\r\n                        placeholder='Senha'\r\n                        secureTextEntry = {true}\r\n                        onChangeText={(senha)=>updateSenha(senha)}\r\n                      />\r\n                </View>  \r\n                </View>\r\n                <View style={{width:'100%', alignItems:'center', marginTop:'1%'}}>                  \r\n                  <TouchableOpacity style={styles.loginBtn} onPress={()=>handleLogin()}>\r\n                      <Text style={styles.loginTxt} >LOGIN</Text>\r\n                  </TouchableOpacity>\r\n                  \r\n                  <Button\r\n                    mode='contained'\r\n                    style={styles.forgot_btn}\r\n                    color='white'\r\n                    onPress={()=>{}}\r\n                  >\r\n                    <Text style={styles.forgot_txt}>Esqueci a senha</Text>\r\n                  </Button>\r\n                </View>\r\n              </View>\r\n             ): \r\n             (\r\n              <ActivityIndicator size='large' animating={true} color={colors.white} />\r\n             )\r\n            }\r\n            <Snackbar visible={barVisible} \r\n                      onDismiss={onDismissSnackBar} \r\n                      action={{label:'OK',onPress:()=>onDismissSnackBar}}\r\n            >\r\n              <Text>{snackBarText}</Text>\r\n            </Snackbar>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default LoginComponent;\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Text, View, ScrollView } from \"react-native\";\r\nimport { Nunito_300Light, Nunito_400Regular, Nunito_800ExtraBold} from '@expo-google-fonts/nunito'\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport styles from \"../../styles/styleUserRegistrationPage\";\r\nimport colors from \"../../styles/colors\";\r\nimport InputFieldRegistration from \"../../components/inputFieldRegistration\";\r\nimport MenuButtonComponent from \"../../components/menuButtonComponent\";\r\nimport { useAuth } from \"../../context/userAuth\";\r\nimport {ActivityIndicator} from 'react-native-paper';\r\nimport AppLoading from 'expo-app-loading';\r\nconst UserRegistrationComponent = ({navigation}) => {\r\n    const {signUp} = useAuth();\r\n\r\n    const [isRegistering, setRegistering] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [userLastName, setUserLastName] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userRA, setUserRA] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [userPhone, setUserPhone] = useState('');\r\n\r\n    const handleRegister = async () =>{\r\n        setRegistering(true);\r\n        let registerObj={\r\n            first_name:userName,\r\n            last_name:userLastName,\r\n            email:userEmail,\r\n            ra:userRA,\r\n            cellphone:userPhone,\r\n            password:userPassword\r\n        }\r\n        await signUp(registerObj).then((response)=>{\r\n                if(response.status === true){\r\n                    setTimeout(()=>navigation.push(\"UserRegistrationSuccess\"));\r\n                    setRegistering(false);\r\n                }else{\r\n                    setRegistering(false);\r\n                }\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const updateUserName = (name) => {\r\n        setUserName(name);\r\n    }\r\n\r\n    const updateUserLastName = (lastName) => {\r\n        setUserLastName(lastName);\r\n    }\r\n\r\n    const updateUserEmail = (email) => {\r\n        setUserEmail(email);\r\n    }\r\n\r\n    const updateUserRA = (ra) => {\r\n        setUserRA(ra);\r\n    }\r\n\r\n    const updateUserPassword = (password) => {\r\n        setUserPassword(password);\r\n    }\r\n\r\n    const updateUserPhone = (phone) => {\r\n        setUserPhone(phone);\r\n    }\r\n\r\n    const updateRegistering = () => {\r\n        setRegistering(true);\r\n        setTimeout(() => setRegistering(false), 4000);\r\n    }\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_300Light,\r\n        Nunito_400Regular,\r\n        Nunito_800ExtraBold,\r\n    });\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n    return (\r\n        <ScrollView style = { styles.container }>\r\n            {!isRegistering ? \r\n                (<>\r\n                    <View style = { styles.textContainer }>\r\n                        <Text style = { styles.title }>\r\n                            Vamos Cadastrar?\r\n                        </Text>\r\n                        <Text style = { styles.description }>\r\n                            Tenha acesso a diversos livros universitários no preçinho\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style = {styles.inputTextContainer}>\r\n                        <View style = { styles.inputView }>\r\n                            <InputFieldRegistration \r\n                                value = {userName}\r\n                                placeholder = \"Nome\"\r\n                                onChangeText = { (name) => updateUserName(name) }\r\n                            />\r\n                        </View>\r\n                        <View style = { styles.inputView }>\r\n                            <InputFieldRegistration \r\n                                value = {userLastName}\r\n                                placeholder = \"Sobrenome\"\r\n                                onChangeText = { (lastName) => updateUserLastName(lastName) }\r\n                            />\r\n                        </View>\r\n                        <View style = { styles.inputView }>\r\n                            <InputFieldRegistration \r\n                                value = {userEmail}\r\n                                placeholder = \"E-mail Institucional\"\r\n                                onChangeText = { (email) => updateUserEmail(email) }\r\n                            />\r\n                        </View>\r\n                        <View style = { styles.inputView }>\r\n                            <InputFieldRegistration \r\n                                value = {userRA}\r\n                                placeholder = \"Registro Acadêmico (RA)\"\r\n                                onChangeText = { (ra) => updateUserRA(ra) }\r\n                                keyboardType = \"numeric\"\r\n                            />\r\n                        </View>\r\n                        <View style = { styles.inputView }>\r\n                            <InputFieldRegistration \r\n                                value = {userPhone}\r\n                                placeholder = \"Celular\"\r\n                                onChangeText = { (phone) => updateUserPhone(phone) }\r\n                                keyboardType = \"numeric\"\r\n                            />\r\n                        </View>\r\n                        <View style = { styles.inputView }>\r\n                            <InputFieldRegistration \r\n                                value = {userPassword}\r\n                                placeholder = \"Senha\"\r\n                                onChangeText = { (password) => updateUserPassword(password) }\r\n                                secureTextEntry = {true}\r\n                            />\r\n                        </View>\r\n\r\n                        <MenuButtonComponent\r\n                        titulo = \"Criar conta\"\r\n                        cor = { colors.tertiary }\r\n                        onPress = { () => handleRegister() }\r\n                        />\r\n                    </View>\r\n                </>):\r\n                    (<ActivityIndicator size='large' animating={true} color={colors.primary} />)\r\n            }\r\n            \r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nexport default UserRegistrationComponent;","import { StyleSheet } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.grayLight,\r\n        margin: 30\r\n    },\r\n    spacerStyle: {\r\n        marginBottom: 15,\r\n    },\r\n    title: {\r\n        color: colors.black,\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        fontFamily: 'Nunito_800ExtraBold'\r\n    },\r\n    description: {\r\n        color: colors.grayMedium,\r\n        fontWeight: 'normal',\r\n        fontSize: 16,\r\n        fontFamily: 'Nunito_400Regular'\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { useState, Component, useEffect } from \"react\";\r\nimport { Text, View, StyleSheet, BackHandler } from \"react-native\";\r\nimport { Nunito_400Regular, Nunito_700Bold, Nunito_800ExtraBold} from '@expo-google-fonts/nunito'\r\nimport { useFonts } from \"@expo-google-fonts/nunito\";\r\nimport styles from \"../../styles/styleUserRegSuccessPage\";\r\nimport colors from \"../../styles/colors\";\r\nimport { useAuth } from \"../../context/userAuth\";\r\n\r\nconst UserRegSuccessComponent = ({navigation}) => {\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Nunito_400Regular,\r\n        Nunito_700Bold,\r\n        Nunito_800ExtraBold\r\n    });\r\n\r\n    return(\r\n        <View style = { styles.container }>\r\n            <Text style = { styles.title }>\r\n                E-mail de verificação enviado!\r\n            </Text>\r\n            <View style = { styles.spacerStyle }></View>\r\n            <Text style = { styles.description }>\r\n                Por favor, verifique seu e-mail institucional e siga as instruções para ter acesso à plataforma.\r\n            </Text>\r\n            <Text style = { styles.description }>\r\n                Se não encontrar na sua caixa de entrada, procure também na sua caixa de spam.\r\n            </Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default UserRegSuccessComponent;","import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport LandPageComponent from '../features/land-page/landPageComponent';\r\nimport LoginComponent from '../features/login-page/loginComponent';\r\nimport UserRegistrationComponent from '../features/user-registration-page/userRegistrationPageComponent';\r\nimport UserRegSuccessComponent from '../features/user-registration-page/userRegSuccessPageComponent';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nconst AuthRoutes = () => {\r\n\r\n    return(\r\n            <Stack.Navigator>\r\n                <Stack.Screen name=\"LandPage\" component={LandPageComponent} />\r\n                <Stack.Screen name=\"Login\" component={LoginComponent} />\r\n                <Stack.Screen name=\"UserRegistration\" component={UserRegistrationComponent} />\r\n                <Stack.Screen name=\"UserRegistrationSuccess\" component={UserRegSuccessComponent} />\r\n            </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default AuthRoutes;","import React from \"react\";\r\nimport { useAuth } from \"../context/userAuth\";\r\nimport AppRoutes from \"./appRoute\";\r\nimport AuthRoutes from \"./authRoute\";\r\n\r\n\r\nconst Routes = () => {\r\n    const {signed} = useAuth(); \r\n    return signed ? <AppRoutes /> : <AuthRoutes />\r\n    \r\n}\r\n\r\nexport default Routes;","\r\nimport { useState } from 'react';\r\nimport { StyleSheet,  View } from 'react-native';\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport {AuthProvider} from './context/userAuth';\r\nimport Routes from './routes/routes';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [isAuth,setAuth] = useState(false);\r\n  \r\n\r\n  return (\r\n    <AuthProvider>\r\n      <PaperProvider>\r\n        <NavigationContainer>\r\n          <Routes />\r\n        </NavigationContainer>\r\n      </PaperProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  backgroundInput:{\r\n    borderWidth:1,\r\n    height:40,\r\n    margin:12,\r\n    padding:10,\r\n  }\r\n});\r\n"],"sourceRoot":""}